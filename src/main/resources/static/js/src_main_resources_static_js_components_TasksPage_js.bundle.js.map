{"version":3,"file":"src_main_resources_static_js_components_TasksPage_js.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;;AAGA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAIA;AACA;AAEA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;;AAEA;AACA;AAKA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AAAA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAQA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AAAA;AAQA;AAEA;AAMA;AAEA;AAKA;AACA;AAAA;AAMA;;;;;;;;;;;;;;;;;;ACljGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://online-store/./src/main/resources/static/js/components/TasksPage.js","webpack://online-store/./src/main/resources/static/css/TasksPage.css","webpack://online-store/./src/main/resources/static/css/TasksPage.css?a10d"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport apiClient from \"./apiClient\"; // Import the configured Axios instance\r\nimport \"../../css/TasksPage.css\";\r\n\r\nexport default function TasksPage() {\r\n    const { projectId } = useParams();\r\n    const [tasks, setTasks] = useState([]);\r\n    const [project, setProject] = useState({});\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem(\"token\");\r\n\r\n        apiClient\r\n            .get(`/projects/${projectId}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n            .then((response) => setProject(response.data))\r\n            .catch((error) => console.error(\"Error fetching project:\", error));\r\n\r\n        apiClient\r\n            .get(`/tasks/project/${projectId}`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n            .then((response) => setTasks(response.data))\r\n            .catch((error) => console.error(\"Error fetching tasks:\", error));\r\n    }, [projectId]);\r\n\r\n\r\n    // Handle drag and drop\r\n    const onDragEnd = (result) => {\r\n        const { source, destination, draggableId } = result;\r\n\r\n        if (!destination) return;\r\n        if (\r\n            source.droppableId === destination.droppableId &&\r\n            source.index === destination.index\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        const task = tasks.find((t) => t.id.toString() === draggableId);\r\n        if (!task) return;\r\n\r\n        // Define valid transitions for task statuses\r\n        const validTransitions = {\r\n            NOT_STARTED: [\"IN_PROGRESS\"],\r\n            IN_PROGRESS: [\"COMPLETED\"],\r\n        };\r\n\r\n        const allowedDestinations = validTransitions[task.status] || [];\r\n        if (!allowedDestinations.includes(destination.droppableId)) {\r\n            return;\r\n        }\r\n\r\n        const updatedTasks = tasks.map((t) =>\r\n            t.id === task.id ? { ...t, status: destination.droppableId } : t\r\n        );\r\n        setTasks(updatedTasks);\r\n\r\n        // Update task status on the server\r\n        apiClient\r\n            .put(\r\n                `/tasks/${task.id}`,\r\n                {\r\n                    ...task,\r\n                    status: destination.droppableId,\r\n                },\r\n                {\r\n                    headers: {\r\n                        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n                    },\r\n                }\r\n            )\r\n            .catch((error) => console.error(\"Error updating task:\", error));\r\n    };\r\n\r\n    // Filter tasks by status\r\n    const filteredTasks = {\r\n        NOT_STARTED: tasks.filter((task) => task.status === \"NOT_STARTED\"),\r\n        IN_PROGRESS: tasks.filter((task) => task.status === \"IN_PROGRESS\"),\r\n        COMPLETED: tasks.filter((task) => task.status === \"COMPLETED\"),\r\n    };\r\n\r\n    return (\r\n        <div className=\"tasks-page\">\r\n            <h1>Tasks for project: {project.name}</h1>\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n                <div className=\"tasks-container\">\r\n                    {[\"NOT_STARTED\", \"IN_PROGRESS\", \"COMPLETED\"].map((status) => (\r\n                        <Droppable droppableId={status} key={status}>\r\n                            {(provided) => (\r\n                                <div\r\n                                    className=\"tasks-column\"\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.droppableProps}\r\n                                >\r\n                                    <h2>\r\n                                        {status.replace(\"_\", \" \")} (\r\n                                        {filteredTasks[status].length})\r\n                                    </h2>\r\n                                    {filteredTasks[status].length > 0 ? (\r\n                                        filteredTasks[status].map((task, index) => (\r\n                                            <Draggable\r\n                                                key={task.id}\r\n                                                draggableId={task.id.toString()}\r\n                                                index={index}\r\n                                            >\r\n                                                {(provided) => (\r\n                                                    <div\r\n                                                        className=\"task-card\"\r\n                                                        ref={provided.innerRef}\r\n                                                        {...provided.draggableProps}\r\n                                                        {...provided.dragHandleProps}\r\n                                                    >\r\n                                                        <h3>{task.title}</h3>\r\n                                                        <p>{task.description}</p>\r\n                                                        <p>Due: {task.dueDate}</p>\r\n                                                        <p>Priority: {task.priority}</p>\r\n                                                    </div>\r\n                                                )}\r\n                                            </Draggable>\r\n                                        ))\r\n                                    ) : (\r\n                                        <p>No tasks in this status.</p>\r\n                                    )}\r\n                                    {provided.placeholder}\r\n                                </div>\r\n                            )}\r\n                        </Droppable>\r\n                    ))}\r\n                </div>\r\n            </DragDropContext>\r\n            <a\r\n                href={`/projects/${projectId}/tasks/new`}\r\n                className=\"btn btn-success\"\r\n            >\r\n                Add Task\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `.tasks-page {\r\n    padding: 20px;\r\n    font-family: Arial, sans-serif;\r\n    background-color: #f9f9f9;\r\n}\r\n\r\nh1 {\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.tasks-container {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    gap: 20px;\r\n}\r\n\r\n.tasks-column {\r\n    flex: 1;\r\n    background: #f8f9fa;\r\n    border-radius: 8px;\r\n    padding: 15px;\r\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n    min-height: 300px;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.tasks-column h2 {\r\n    text-align: center;\r\n    margin-bottom: 15px;\r\n}\r\n\r\n.task-card {\r\n    background: white;\r\n    padding: 10px;\r\n    margin-bottom: 10px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\r\n    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\r\n    cursor: grab;\r\n}\r\n\r\n.task-card:hover {\r\n    transform: scale(1.03);\r\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.task-card h3 {\r\n    margin: 0;\r\n    font-size: 1.2em;\r\n}\r\n\r\n.task-card p {\r\n    margin: 5px 0;\r\n    color: #555;\r\n}\r\n\r\n.btn {\r\n    display: block;\r\n    width: 150px;\r\n    margin: 20px auto 0;\r\n    padding: 10px 20px;\r\n    text-align: center;\r\n    background-color: #007bff;\r\n    color: white;\r\n    text-decoration: none;\r\n    border-radius: 5px;\r\n}\r\n\r\n.btn:hover {\r\n    background-color: #0056b3;\r\n}\r\n\r\n.tasks-column[data-rbd-droppable-context-id] {\r\n    background-color: #f0f8ff;\r\n    transition: background-color 0.3s ease-in-out;\r\n}\r\n\r\n.tasks-column[data-rbd-droppable-context-id]:hover {\r\n    background-color: #e6f7ff;\r\n    transition: background-color 0.3s ease-in-out;\r\n}\r\n\r\n.task-card[aria-grabbed=\"true\"] {\r\n    opacity: 0.8;\r\n    transform: scale(1.05);\r\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.4);\r\n    cursor: grabbing;\r\n}\r\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/main/resources/static/css/TasksPage.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,aAAa;IACb,8BAA8B;IAC9B,yBAAyB;AAC7B;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,SAAS;AACb;;AAEA;IACI,OAAO;IACP,mBAAmB;IACnB,kBAAkB;IAClB,aAAa;IACb,wCAAwC;IACxC,iBAAiB;IACjB,aAAa;IACb,sBAAsB;AAC1B;;AAEA;IACI,kBAAkB;IAClB,mBAAmB;AACvB;;AAEA;IACI,iBAAiB;IACjB,aAAa;IACb,mBAAmB;IACnB,kBAAkB;IAClB,wCAAwC;IACxC,mEAAmE;IACnE,YAAY;AAChB;;AAEA;IACI,sBAAsB;IACtB,yCAAyC;AAC7C;;AAEA;IACI,SAAS;IACT,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,WAAW;AACf;;AAEA;IACI,cAAc;IACd,YAAY;IACZ,mBAAmB;IACnB,kBAAkB;IAClB,kBAAkB;IAClB,yBAAyB;IACzB,YAAY;IACZ,qBAAqB;IACrB,kBAAkB;AACtB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,yBAAyB;IACzB,6CAA6C;AACjD;;AAEA;IACI,yBAAyB;IACzB,6CAA6C;AACjD;;AAEA;IACI,YAAY;IACZ,sBAAsB;IACtB,yCAAyC;IACzC,gBAAgB;AACpB\",\"sourcesContent\":[\".tasks-page {\\r\\n    padding: 20px;\\r\\n    font-family: Arial, sans-serif;\\r\\n    background-color: #f9f9f9;\\r\\n}\\r\\n\\r\\nh1 {\\r\\n    text-align: center;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.tasks-container {\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    gap: 20px;\\r\\n}\\r\\n\\r\\n.tasks-column {\\r\\n    flex: 1;\\r\\n    background: #f8f9fa;\\r\\n    border-radius: 8px;\\r\\n    padding: 15px;\\r\\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\\r\\n    min-height: 300px;\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.tasks-column h2 {\\r\\n    text-align: center;\\r\\n    margin-bottom: 15px;\\r\\n}\\r\\n\\r\\n.task-card {\\r\\n    background: white;\\r\\n    padding: 10px;\\r\\n    margin-bottom: 10px;\\r\\n    border-radius: 8px;\\r\\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\\r\\n    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;\\r\\n    cursor: grab;\\r\\n}\\r\\n\\r\\n.task-card:hover {\\r\\n    transform: scale(1.03);\\r\\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);\\r\\n}\\r\\n\\r\\n.task-card h3 {\\r\\n    margin: 0;\\r\\n    font-size: 1.2em;\\r\\n}\\r\\n\\r\\n.task-card p {\\r\\n    margin: 5px 0;\\r\\n    color: #555;\\r\\n}\\r\\n\\r\\n.btn {\\r\\n    display: block;\\r\\n    width: 150px;\\r\\n    margin: 20px auto 0;\\r\\n    padding: 10px 20px;\\r\\n    text-align: center;\\r\\n    background-color: #007bff;\\r\\n    color: white;\\r\\n    text-decoration: none;\\r\\n    border-radius: 5px;\\r\\n}\\r\\n\\r\\n.btn:hover {\\r\\n    background-color: #0056b3;\\r\\n}\\r\\n\\r\\n.tasks-column[data-rbd-droppable-context-id] {\\r\\n    background-color: #f0f8ff;\\r\\n    transition: background-color 0.3s ease-in-out;\\r\\n}\\r\\n\\r\\n.tasks-column[data-rbd-droppable-context-id]:hover {\\r\\n    background-color: #e6f7ff;\\r\\n    transition: background-color 0.3s ease-in-out;\\r\\n}\\r\\n\\r\\n.task-card[aria-grabbed=\\\"true\\\"] {\\r\\n    opacity: 0.8;\\r\\n    transform: scale(1.05);\\r\\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.4);\\r\\n    cursor: grabbing;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../../node_modules/css-loader/dist/cjs.js!./TasksPage.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../../node_modules/css-loader/dist/cjs.js!./TasksPage.css\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":[],"sourceRoot":""}